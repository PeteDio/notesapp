services:
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    environment:
      - POSTGRES_DB=notesdb
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - private
  frontend:
    build:
      context: frontend
      target: development
    command: sh -c "npm run dev"
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    networks:
      - public
    depends_on:
      - backend
  backend:
    build:
      args:
      - NODE_ENV=development
      context: backend
      target: development
    command: sh -c "npm run migrate && npm run start-watch"
    environment:
      - DEV_DATABASE_URL=postgres://postgres:password@db:5432/notesdb
      - DEV_DATABASE_DB=notesdb
      - DATABASE_HOST=db
      - NODE_ENV=development
    ports:
      - 8080:8080
      - 9229:9229
      - 9230:9230
    secrets:
      - db-password
    volumes:
      - ./backend/src:/code/src:ro
      - ./backend/package.json:/code/package.json
      - ./backend/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
    networks:
      - public
      - private
    depends_on:
      - db
networks:
  public:
  private:
volumes:
  back-notused:
  db-data:
secrets:
  db-password:
    file: db/password.txt
